 ____  _            _        _           _         _______        _      _____           _       _   
|  _ \| |          | |      | |         (_)       |__   __|      | |    / ____|         (_)     | |  
| |_) | | ___   ___| | _____| |__   __ _ _ _ __      | | ___  ___| |_  | (___   ___ _ __ _ _ __ | |_ 
|  _ <| |/ _ \ / __| |/ / __| '_ \ / _` | | '_ \     | |/ _ \/ __| __|  \___ \ / __| '__| | '_ \| __|
| |_) | | (_) | (__|   < (__| | | | (_| | | | | |    | |  __/\__ \ |_   ____) | (__| |  | | |_) | |_ 
|____/|_|\___/ \___|_|\_\___|_| |_|\__,_|_|_| |_|    |_|\___||___/\__| |_____/ \___|_|  |_| .__/ \__|
                                                                                          | |        
                                                                                          |_|        

## TABLE OF CONTENTS
	1. INTRODUCTION ------------------- Includes program purpose and project notes
	2. USAGE -------------------------- Includes compilation and execution instructions, and output format
	3. PROJECT STATEMENT -------------- Includes the description of the project

--------------------------------------------------------------------------------------------

## 1. INTRODUCTION

COP 4520, Spring 2021, Team 3:
- Shelby Menown
- Stacey Dale
- Patrick Bauer
- Robert Pomichter
- Hannah Moss

COP 4520.001: Concepts of Parallel and Distributed Processing with Professor Damian Dechev (Spring 2021)
Department of Computer Science, College of College of Engineering and Computer Science at UCF

This script will run the following six programs over three test cases and three prefixes.
1.) 3 Single-Threaded Blockchains, each in a different language (Java, C++, and Haskell)
1.) 3 Multi-Threaded Blockchains, each in a different language (Java, C++, and Haskell)

In order for this script to run, it will need various files in specific directories.
In order to make the testing process easier, all needed files are provided in the correct locations within Data_Collecting-Package.7zip.

--------------------------------------------------------------------------------------------

## 2. USAGE

Before using this script, run all the following (in order) to ensure they are installed:
	sudo apt install default-jdk
	sudo apt-get install curl -y
	curl https://sh.rustup.rs -sSf | sh
	source $HOME/.cargo/env
	source ~/.profile
	sudo apt-get install build-essential -y
	
In the Linux shell, issue the following command:
	bash Blockchain_Testing.sh
	
The program will print its progress, then finally inform the user when it has completed all tests.
The output of all the files will be saved to text files in the Data_Output folder.
The formatting of each line of the data in every file is like so:

<total execution time> <average block execution time>

A successful execution will look like this:
================================================================
Running test cases against Java Blockchains...
================================================================

  [Test Case] TestCase 1 ...
    [Prefix] Prefix 0 ... 
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 2 ...
    [Prefix] Prefix 0 ... 
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 3 ...
    [Prefix] Prefix 0 ... 
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...

================================================================
Running test cases against C++ Blockchains...
================================================================

  [Test Case] TestCase 1 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 2 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 3 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...

================================================================
Running test cases against Rust Blockchains...
================================================================

  [Test Case] TestCase 1 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 2 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...
  [Test Case] TestCase 3 ...
    [Prefix] Prefix 0 ...
    [Prefix] Prefix 1 ...
    [Prefix] Prefix 2 ...
    [Prefix] Prefix 3 ...

================================================================
All Tests Complete.
================================================================

--------------------------------------------------------------------------------------------

## 3. PROJECT STATEMENT

Our Goals:
1. To research the efficiency of a multi-threaded blockchain algorithm VS. single-threaded blockchain algorithm
2. To research the change in efficiency of a blockchain across multiple languages.

Our Methodology:
1. Implement a simple, single-threaded blockchain in Java, C++, and Haskell.
2. Take each language's implementation, and convert it to a multi-threaded version.
3. Compare the efficiency of the single and multi-threaded versions of a language.
4. Compare the effiency of the multi-threaded versions across all languages.

--------------------------------------------------------------------------------------------